  Scanning sources for module dependencies...
  Audio.cpp
C:\SFML\SFML-3.0.0\include\SFML\System\Exception.hpp(41,47): warning C4275: non dll-interface class 'std::runtime_error' used as base for dll-interface class 'sf::Exception'
  (compiling source file 'Audio.cpp')
      C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\stdexcept(100,19):
      see declaration of 'std::runtime_error'
      C:\SFML\SFML-3.0.0\include\SFML\System\Exception.hpp(41,23):
      see declaration of 'sf::Exception'
  
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\utility(479,17): error C2512: 'sf::Sound::Sound': no appropriate default constructor available
  (compiling source file 'Audio.cpp')
      C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\utility(479,17):
      while trying to match the argument list '()'
      C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\utility(479,17):
      the template instantiation context (the oldest one first) is
          C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\Audio.cpp(6,34):
          see reference to class template instantiation 'std::map<std::string,sf::Sound,std::less<std::string>,std::allocator<std::pair<const std::string,sf::Sound>>>' being compiled
          C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\map(345,18):
          while compiling class template member function 'sf::Sound &std::map<std::string,sf::Sound,std::less<std::string>,std::allocator<std::pair<const std::string,sf::Sound>>>::operator [](const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)'
              C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\Audio.cpp(27,31):
              see the first reference to 'std::map<std::string,sf::Sound,std::less<std::string>,std::allocator<std::pair<const std::string,sf::Sound>>>::operator []' in 'loadSounds'
          C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\map(346,16):
          see reference to function template instantiation 'std::pair<std::_Tree_node<std::pair<const std::string,sf::Sound>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::map<std::string,sf::Sound,std::less<std::string>,_Alloc>::_Try_emplace<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(_Keyty)' being compiled
          with
          [
              _Alloc=std::allocator<std::pair<const std::string,sf::Sound>>,
              _Keyty=const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\map(205,56):
          see reference to function template instantiation 'std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<const std::string,sf::Sound>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_Tree_temp_node<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Alnode &,std::_Tree_node<std::pair<const std::string,sf::Sound>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::pair<const std::string,sf::Sound>>,
              _Alnode=std::allocator<std::_Tree_node<std::pair<const std::string,sf::Sound>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,sf::Sound>>>::void_pointer>>
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\xtree(820,25):
          see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,sf::Sound>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,sf::Sound>>>::void_pointer>>,
              _Ty=std::pair<const std::string,sf::Sound>,
              _Objty=std::pair<const std::string,sf::Sound>
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\xmemory(730,14):
          see reference to function template instantiation '_Ty *std::construct_at<_Objty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Ty *const ,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&) noexcept(false)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Sound>,
              _Objty=std::pair<const std::string,sf::Sound>
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\xutility(493,69):
          see reference to function template instantiation 'std::pair<const std::string,sf::Sound>::pair<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(std::piecewise_construct_t,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>)' being compiled
          C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\include\utility(331,15):
          see reference to function template instantiation 'std::pair<const std::string,sf::Sound>::pair<std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<size_t,0>,std::integer_sequence<size_t>)' being compiled
          with
          [
              _Tuple1=std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,
              _Tuple2=std::tuple<>
          ]
  
  GameFunction.cpp
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(233,14): error C2660: 'matrixStack::push': function does not take 2 arguments
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\MatrixStack.h(19,10):
      see declaration of 'matrixStack::push'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(233,14):
      while trying to match the argument list '(int **, int)'
  
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(236,18): error C2039: 'n': is not a member of 'Matrix'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\Matrix.h(6,8):
      see declaration of 'Matrix'
  
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(237,22): error C2440: '=': cannot convert from 'int [4][4]' to 'int **'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(237,22):
      Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or parenthesized function-style cast
  
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(243,14): error C2660: 'matrixStack::push': function does not take 2 arguments
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\MatrixStack.h(19,10):
      see declaration of 'matrixStack::push'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(243,14):
      while trying to match the argument list '(int **, int)'
  
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(246,18): error C2039: 'n': is not a member of 'Matrix'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\Matrix.h(6,8):
      see declaration of 'Matrix'
  
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(247,22): error C2440: '=': cannot convert from 'int [4][4]' to 'int **'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(247,22):
      Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or parenthesized function-style cast
  
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(256,24): error C2248: 'User::username': cannot access private member declared in class 'User'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\User.h(9,17):
      see declaration of 'User::username'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\User.h(7,7):
      see declaration of 'User'
  
C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\GameFunction.cpp(256,39): error C2248: 'User::score': cannot access private member declared in class 'User'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\User.h(11,9):
      see declaration of 'User::score'
      C:\Users\nghoo\OneDrive\Documents\CSC10004\src\src\User.h(7,7):
      see declaration of 'User'
  
  User.cpp
  Generating Code...
